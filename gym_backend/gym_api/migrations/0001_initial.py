# Generated by Django 5.2.3 on 2025-07-02 01:23

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Equipment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "equipment_type",
                    models.CharField(
                        choices=[
                            ("cardio", "Cardio"),
                            ("strength", "Strength"),
                            ("free_weights", "Free Weights"),
                            ("functional", "Functional Training"),
                            ("recovery", "Recovery"),
                            ("flexibility", "Flexibility"),
                            ("accessories", "Accessories"),
                        ],
                        max_length=20,
                    ),
                ),
                ("brand", models.CharField(max_length=50)),
                ("model", models.CharField(blank=True, max_length=50)),
                ("purchase_date", models.DateField()),
                (
                    "purchase_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("warranty_expiry", models.DateField()),
                ("is_working", models.BooleanField(default=True)),
                (
                    "condition",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("maintenance", "Under Maintenance"),
                        ],
                        default="excellent",
                        max_length=15,
                    ),
                ),
                ("last_maintenance_date", models.DateField(blank=True, null=True)),
                ("next_maintenance_date", models.DateField(blank=True, null=True)),
                ("maintenance_notes", models.TextField(blank=True)),
                (
                    "equipment_id",
                    models.CharField(default="EQP-0001", max_length=20, unique=True),
                ),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("serial_number", models.CharField(blank=True, max_length=100)),
                ("location_in_gym", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="GymOwner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("gym_name", models.CharField(max_length=100)),
                ("gym_address", models.TextField()),
                ("gym_description", models.TextField(blank=True)),
                ("phone_number", models.CharField(max_length=15)),
                ("gym_established_date", models.DateField()),
                ("subscription_plan", models.CharField(default="basic", max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                ("qr_code_token", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Exercise",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "muscle_group",
                    models.CharField(
                        choices=[
                            ("chest", "Chest"),
                            ("back", "Back"),
                            ("shoulders", "Shoulders"),
                            ("arms", "Arms"),
                            ("core", "Core"),
                            ("legs", "Legs"),
                            ("cardio", "Cardio"),
                            ("full_body", "Full Body"),
                        ],
                        max_length=20,
                    ),
                ),
                ("instructions", models.TextField()),
                ("sets", models.IntegerField(default=1)),
                ("reps", models.CharField(default="10-12", max_length=20)),
                ("rest_time_seconds", models.IntegerField(default=60)),
                (
                    "difficulty_level",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                        ],
                        default="beginner",
                        max_length=15,
                    ),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                (
                    "equipment_needed",
                    models.ManyToManyField(blank=True, to="gym_api.equipment"),
                ),
                (
                    "gym_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exercises",
                        to="gym_api.gymowner",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="equipment",
            name="gym_owner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="equipment",
                to="gym_api.gymowner",
            ),
        ),
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("phone", models.CharField(max_length=15)),
                ("date_of_birth", models.DateField()),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("other", "Other"),
                        ],
                        default="male",
                        max_length=10,
                    ),
                ),
                ("address", models.TextField()),
                (
                    "membership_type",
                    models.CharField(
                        choices=[
                            ("basic", "Basic"),
                            ("premium", "Premium"),
                            ("vip", "VIP"),
                        ],
                        default="basic",
                        max_length=10,
                    ),
                ),
                ("join_date", models.DateField(auto_now_add=True)),
                ("membership_expiry", models.DateField()),
                ("is_active", models.BooleanField(default=True)),
                ("emergency_contact_name", models.CharField(max_length=100)),
                ("emergency_contact_phone", models.CharField(max_length=15)),
                (
                    "emergency_contact_relation",
                    models.CharField(default="Family", max_length=50),
                ),
                (
                    "member_id",
                    models.CharField(default="MEM-0001", max_length=20, unique=True),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="member_profiles/"
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "gym_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="gym_api.gymowner",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("gym_owner", "member_id")},
            },
        ),
        migrations.CreateModel(
            name="SubscriptionPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("price", models.DecimalField(decimal_places=2, max_digits=8)),
                ("duration_value", models.IntegerField()),
                (
                    "duration_type",
                    models.CharField(
                        choices=[
                            ("days", "Days"),
                            ("weeks", "Weeks"),
                            ("months", "Months"),
                            ("years", "Years"),
                        ],
                        default="months",
                        max_length=10,
                    ),
                ),
                ("features", models.JSONField(default=list)),
                (
                    "discount_percentage",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "plan_id",
                    models.CharField(default="PLN-0001", max_length=20, unique=True),
                ),
                ("max_members", models.IntegerField(blank=True, null=True)),
                ("includes_trainer", models.BooleanField(default=False)),
                ("includes_nutrition", models.BooleanField(default=False)),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("updated_date", models.DateTimeField(auto_now=True)),
                (
                    "gym_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscription_plans",
                        to="gym_api.gymowner",
                    ),
                ),
            ],
            options={
                "unique_together": {("gym_owner", "plan_id")},
            },
        ),
        migrations.CreateModel(
            name="MemberSubscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("expired", "Expired"),
                            ("cancelled", "Cancelled"),
                            ("suspended", "Suspended"),
                            ("pending", "Pending"),
                        ],
                        default="active",
                        max_length=10,
                    ),
                ),
                ("auto_renew", models.BooleanField(default=False)),
                ("amount_paid", models.DecimalField(decimal_places=2, max_digits=8)),
                ("payment_method", models.CharField(blank=True, max_length=15)),
                ("notes", models.TextField(blank=True)),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("updated_date", models.DateTimeField(auto_now=True)),
                (
                    "gym_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="member_subscriptions",
                        to="gym_api.gymowner",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="gym_api.member"
                    ),
                ),
                (
                    "subscription_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gym_api.subscriptionplan",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Trainer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("phone", models.CharField(max_length=15)),
                (
                    "specialization",
                    models.CharField(
                        choices=[
                            ("fitness", "General Fitness"),
                            ("yoga", "Yoga"),
                            ("cardio", "Cardio"),
                            ("strength", "Strength Training"),
                            ("crossfit", "CrossFit"),
                            ("pilates", "Pilates"),
                            ("martial_arts", "Martial Arts"),
                            ("dance", "Dance"),
                            ("swimming", "Swimming"),
                        ],
                        max_length=20,
                    ),
                ),
                ("experience_years", models.IntegerField()),
                ("certification", models.CharField(max_length=200)),
                ("hourly_rate", models.DecimalField(decimal_places=2, max_digits=6)),
                (
                    "monthly_salary",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("is_available", models.BooleanField(default=True)),
                ("joining_date", models.DateField(auto_now_add=True)),
                (
                    "trainer_id",
                    models.CharField(default="TRN-0001", max_length=20, unique=True),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="trainer_profiles/"
                    ),
                ),
                ("bio", models.TextField(blank=True)),
                ("schedule_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "gym_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trainers",
                        to="gym_api.gymowner",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("gym_owner", "trainer_id")},
            },
        ),
        migrations.CreateModel(
            name="WorkoutPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "difficulty_level",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                        ],
                        max_length=15,
                    ),
                ),
                ("duration_weeks", models.IntegerField()),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("updated_date", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gym_api.trainer",
                    ),
                ),
                (
                    "gym_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workout_plans",
                        to="gym_api.gymowner",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WorkoutSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField()),
                ("duration_minutes", models.IntegerField()),
                ("notes", models.TextField(blank=True)),
                ("completed", models.BooleanField(default=False)),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                (
                    "gym_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workout_sessions",
                        to="gym_api.gymowner",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="gym_api.member"
                    ),
                ),
                (
                    "trainer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="gym_api.trainer",
                    ),
                ),
                (
                    "workout_plan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="gym_api.workoutplan",
                    ),
                ),
            ],
        ),
        migrations.AlterUniqueTogether(
            name="equipment",
            unique_together={("gym_owner", "equipment_id")},
        ),
        migrations.CreateModel(
            name="Attendance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("check_in_time", models.DateTimeField()),
                ("check_out_time", models.DateTimeField(blank=True, null=True)),
                ("date", models.DateField()),
                (
                    "attendance_id",
                    models.CharField(default="ATT-0001", max_length=20, unique=True),
                ),
                (
                    "session_duration_minutes",
                    models.IntegerField(blank=True, null=True),
                ),
                ("notes", models.TextField(blank=True)),
                ("qr_code_used", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "gym_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendances",
                        to="gym_api.gymowner",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="gym_api.member"
                    ),
                ),
            ],
            options={
                "unique_together": {("gym_owner", "member", "date")},
            },
        ),
        migrations.CreateModel(
            name="MembershipPayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=8)),
                ("payment_date", models.DateTimeField()),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("cash", "Cash"),
                            ("card", "Credit/Debit Card"),
                            ("upi", "UPI"),
                            ("bank_transfer", "Bank Transfer"),
                            ("online", "Online Payment"),
                            ("cheque", "Cheque"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("completed", "Completed"),
                            ("pending", "Pending"),
                            ("failed", "Failed"),
                            ("refunded", "Refunded"),
                        ],
                        default="completed",
                        max_length=10,
                    ),
                ),
                ("membership_months", models.IntegerField()),
                (
                    "transaction_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "payment_id",
                    models.CharField(default="PAY-0001", max_length=20, unique=True),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "discount_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=8),
                ),
                (
                    "tax_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=8),
                ),
                ("receipt_number", models.CharField(blank=True, max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "gym_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="gym_api.gymowner",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="gym_api.member"
                    ),
                ),
                (
                    "member_subscription",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="gym_api.membersubscription",
                    ),
                ),
                (
                    "subscription_plan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gym_api.subscriptionplan",
                    ),
                ),
            ],
            options={
                "unique_together": {("gym_owner", "payment_id")},
            },
        ),
    ]
